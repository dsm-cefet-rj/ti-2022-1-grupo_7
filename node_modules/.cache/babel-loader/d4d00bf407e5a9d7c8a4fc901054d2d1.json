{"ast":null,"code":"// import { createAsyncThunk, createEntityAdapter } from \"@reduxjs/toolkit\";\n// export const fetchBanco = createAsyncThunk('Banco/fetchBanco',\n//     async () => {\n//         return await (await fetch('http://localhost:3004/Banco')).json();\n// });\n// const bookingsAdapter = createEntityAdapter()\n// export const boxSlice = createSlice({\n//         name: 'box',\n//         initialState: initialProduto,\n//         reducers: {\n//             addBox: (state, action) => addBoxReducer(state, action.payload),\n//         }\n//     })\n// export default function reducer(state, action) {\n//     if (action.type == 'ADD_BOX') {\n//         return [ ...state, action.box ];\n//     }\n//     return state;\n// }\n// export const addBox = (box) => {\n//     return {\n//         type: 'ADD_BOX',\n//         box\n//     };\n// };","map":{"version":3,"names":[],"sources":["C:/Users/Victor/Desktop/Projeto/PSW/ti-2022-1-grupo_7/src/components/Redux/Boxs.js"],"sourcesContent":["// import { createAsyncThunk, createEntityAdapter } from \"@reduxjs/toolkit\";\r\n\r\n// export const fetchBanco = createAsyncThunk('Banco/fetchBanco',\r\n//     async () => {\r\n//         return await (await fetch('http://localhost:3004/Banco')).json();\r\n// });\r\n\r\n// const bookingsAdapter = createEntityAdapter()\r\n\r\n// export const boxSlice = createSlice({\r\n//         name: 'box',\r\n//         initialState: initialProduto,\r\n    \r\n//         reducers: {\r\n//             addBox: (state, action) => addBoxReducer(state, action.payload),\r\n//         }\r\n//     })\r\n\r\n// export default function reducer(state, action) {\r\n//     if (action.type == 'ADD_BOX') {\r\n//         return [ ...state, action.box ];\r\n//     }\r\n//     return state;\r\n// }\r\n\r\n// export const addBox = (box) => {\r\n//     return {\r\n//         type: 'ADD_BOX',\r\n//         box\r\n//     };\r\n// };\r\n\r\n"],"mappings":"AAAA;AAEA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA"},"metadata":{},"sourceType":"module"}