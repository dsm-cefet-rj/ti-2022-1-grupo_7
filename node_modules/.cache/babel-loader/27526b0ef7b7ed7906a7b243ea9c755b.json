{"ast":null,"code":"import { createAsyncThunk, createSlice } from '@reduxjs/toolkit';\nimport global from '../Global/Global';\nconst initialProduto = [];\n\nfunction openBoxReducer(produtos, id) {\n  const filtro = produtos.filter(p => p.id == id);\n  return filtro;\n}\n\nfunction addBoxReducer(produtos, produto) {\n  let proxId = 1 + produtos.map(p => p.id).reduce((x, y) => Math.max(x, y));\n  return produtos.concat([{ ...produto,\n    id: proxId\n  }]);\n}\n\nfunction deleteBoxReducer(produtos, id) {\n  return produtos.filter(p => p.id !== id);\n}\n\nexport const fetchBanco = createAsyncThunk('Banco/fetchBanco', async () => {\n  return await (await fetch('http://localhost:3004/Banco')).json();\n});\n\nfunction fullfillProjetosReducer(projetosState, projetosFetched) {\n  return projetosFetched;\n}\n\nexport const boxSlice = createSlice({\n  name: 'box',\n  initialState: initialProduto,\n  reducers: {\n    openBox: (state, action) => openBoxReducer(state, action.payload),\n    addBox: (state, action) => addBoxReducer(state, action.payload),\n    deleteBox: (state, action) => deleteBoxReducer(state, action.payload)\n  },\n  extraReducers: {\n    [fetchBanco.fulfilled]: (state, action) => fullfillProjetosReducer(state, action.payload)\n  }\n});\nexport const {\n  addBox,\n  deleteBox,\n  openBox\n} = boxSlice.actions;\nexport default boxSlice.reducer; // import {createAsyncThunk, createSlice, createEntityAdapter} from '@reduxjs/toolkit';\n// import { useDispatch } from \"react-redux\";\n// const initialProduto = [];\n// // const bookingsAdapter = createEntityAdapter()\n// function openBoxReducer(produtos, id){\n//     // const filtro = state.produtos.filter((p) => p.id == id);\n//     const filtro = produtos;\n//     return filtro;\n// }\n// function addBoxReducer(produtos, produto){\n//     let proxId = 1 + produtos.map(p => p.id).reduce((x,y) => Math.max(x,y));\n//     return produtos.concat([{...produto, id: proxId}]);\n// }\n// function deleteBoxReducer(produtos, id){\n//     return produtos.filter((p) => p.id !== id);\n// }\n// export const fetchBanco = createAsyncThunk('Banco/fetchBanco',\n//     async () => {\n//         return await (await fetch('http://localhost:3004/Banco')).json();\n// });\n// function fullfillProjetosReducer(projetosState, projetosFetched) {\n//     projetosState.status = 'loaded';\n//     projetosState.produtos = projetosFetched;\n// }\n// export const boxSlice = createSlice({\n//     name: 'box',\n//     initialState: initialProduto,\n//     reducers: {\n//         openBox: (state, action) => openBoxReducer(state, action.payload),\n//         addBox: (state, action) => addBoxReducer(state, action.payload),\n//         deleteBox: (state, action) => deleteBoxReducer(state, action.payload)\n//     },\n//     extraReducers: {\n//         [fetchBanco.fulfilled]: (state, action) => fullfillProjetosReducer(state, action.payload),\n//         [fetchBanco.pending]: (state) => { state.status = 'loading' },\n//         [fetchBanco.rejected]: (state, action) => { state.status = 'failed'; state.erro = action.erro.message }\n//      }\n//  })\n// export const { addBox, deleteBox, openBox} = boxSlice.actions\n// export default boxSlice.reducer\n// export const {\n//     selectAll : selectALLBookings,\n//     selectById: selectBookingById,\n//     selectEntities: selectBookingEntities,\n//     selectTotal: selectBookingsTotal,\n// } = bookingsAdapter.getSelectors(state=>state.bookings)","map":{"version":3,"names":["createAsyncThunk","createSlice","global","initialProduto","openBoxReducer","produtos","id","filtro","filter","p","addBoxReducer","produto","proxId","map","reduce","x","y","Math","max","concat","deleteBoxReducer","fetchBanco","fetch","json","fullfillProjetosReducer","projetosState","projetosFetched","boxSlice","name","initialState","reducers","openBox","state","action","payload","addBox","deleteBox","extraReducers","fulfilled","actions","reducer"],"sources":["C:/Users/Victor/Desktop/Projeto/PSW/ti-2022-1-grupo_7/src/components/Redux/boxSlice.js"],"sourcesContent":["import { createAsyncThunk, createSlice } from '@reduxjs/toolkit'\nimport global from '../Global/Global'\n\nconst initialProduto = [];\n\n\n function openBoxReducer(produtos, id){\n     const filtro = produtos.filter((p) => p.id == id)\n     return filtro;\n }\n\nfunction addBoxReducer(produtos, produto){\n    let proxId = 1 + produtos.map(p => p.id).reduce((x,y) => Math.max(x,y));\n    return produtos.concat([{...produto, id: proxId}]);\n}\n\nfunction deleteBoxReducer(produtos, id){\n\n    return produtos.filter((p) => p.id !== id);\n}\n\nexport const fetchBanco = createAsyncThunk('Banco/fetchBanco',\n    async () => {\n        return await (await fetch('http://localhost:3004/Banco')).json();\n    });\n\nfunction fullfillProjetosReducer(projetosState, projetosFetched){\n    return projetosFetched;\n}\n\nexport const boxSlice = createSlice({\n    name:'box',\n    initialState: initialProduto,\n       \n    reducers: {\n        openBox: (state, action) => openBoxReducer (state, action.payload),\n        addBox: (state , action) => addBoxReducer (state, action.payload),\n        deleteBox: (state, action) => deleteBoxReducer (state, action.payload)\n    },\n    extraReducers: {\n        [fetchBanco.fulfilled]: (state, action) => fullfillProjetosReducer(state, action.payload),\n    }\n\n})\n\nexport const { addBox, deleteBox, openBox} = boxSlice.actions\nexport default boxSlice.reducer\n\n// import {createAsyncThunk, createSlice, createEntityAdapter} from '@reduxjs/toolkit';\n// import { useDispatch } from \"react-redux\";\n\n// const initialProduto = [];\n\n// // const bookingsAdapter = createEntityAdapter()\n\n\n// function openBoxReducer(produtos, id){\n//     // const filtro = state.produtos.filter((p) => p.id == id);\n//     const filtro = produtos;\n//     return filtro;\n// }\n\n// function addBoxReducer(produtos, produto){\n//     let proxId = 1 + produtos.map(p => p.id).reduce((x,y) => Math.max(x,y));\n//     return produtos.concat([{...produto, id: proxId}]);\n// }\n\n// function deleteBoxReducer(produtos, id){\n//     return produtos.filter((p) => p.id !== id);\n// }\n\n// export const fetchBanco = createAsyncThunk('Banco/fetchBanco',\n//     async () => {\n//         return await (await fetch('http://localhost:3004/Banco')).json();\n// });\n\n// function fullfillProjetosReducer(projetosState, projetosFetched) {\n//     projetosState.status = 'loaded';\n//     projetosState.produtos = projetosFetched;\n// }\n\n// export const boxSlice = createSlice({\n//     name: 'box',\n//     initialState: initialProduto,\n\n//     reducers: {\n//         openBox: (state, action) => openBoxReducer(state, action.payload),\n//         addBox: (state, action) => addBoxReducer(state, action.payload),\n//         deleteBox: (state, action) => deleteBoxReducer(state, action.payload)\n//     },\n\n\n\n//     extraReducers: {\n//         [fetchBanco.fulfilled]: (state, action) => fullfillProjetosReducer(state, action.payload),\n//         [fetchBanco.pending]: (state) => { state.status = 'loading' },\n//         [fetchBanco.rejected]: (state, action) => { state.status = 'failed'; state.erro = action.erro.message }\n\n//      }\n//  })\n// export const { addBox, deleteBox, openBox} = boxSlice.actions\n// export default boxSlice.reducer\n\n// export const {\n//     selectAll : selectALLBookings,\n//     selectById: selectBookingById,\n//     selectEntities: selectBookingEntities,\n//     selectTotal: selectBookingsTotal,\n// } = bookingsAdapter.getSelectors(state=>state.bookings)"],"mappings":"AAAA,SAASA,gBAAT,EAA2BC,WAA3B,QAA8C,kBAA9C;AACA,OAAOC,MAAP,MAAmB,kBAAnB;AAEA,MAAMC,cAAc,GAAG,EAAvB;;AAGC,SAASC,cAAT,CAAwBC,QAAxB,EAAkCC,EAAlC,EAAqC;EACjC,MAAMC,MAAM,GAAGF,QAAQ,CAACG,MAAT,CAAiBC,CAAD,IAAOA,CAAC,CAACH,EAAF,IAAQA,EAA/B,CAAf;EACA,OAAOC,MAAP;AACH;;AAEF,SAASG,aAAT,CAAuBL,QAAvB,EAAiCM,OAAjC,EAAyC;EACrC,IAAIC,MAAM,GAAG,IAAIP,QAAQ,CAACQ,GAAT,CAAaJ,CAAC,IAAIA,CAAC,CAACH,EAApB,EAAwBQ,MAAxB,CAA+B,CAACC,CAAD,EAAGC,CAAH,KAASC,IAAI,CAACC,GAAL,CAASH,CAAT,EAAWC,CAAX,CAAxC,CAAjB;EACA,OAAOX,QAAQ,CAACc,MAAT,CAAgB,CAAC,EAAC,GAAGR,OAAJ;IAAaL,EAAE,EAAEM;EAAjB,CAAD,CAAhB,CAAP;AACH;;AAED,SAASQ,gBAAT,CAA0Bf,QAA1B,EAAoCC,EAApC,EAAuC;EAEnC,OAAOD,QAAQ,CAACG,MAAT,CAAiBC,CAAD,IAAOA,CAAC,CAACH,EAAF,KAASA,EAAhC,CAAP;AACH;;AAED,OAAO,MAAMe,UAAU,GAAGrB,gBAAgB,CAAC,kBAAD,EACtC,YAAY;EACR,OAAO,MAAM,CAAC,MAAMsB,KAAK,CAAC,6BAAD,CAAZ,EAA6CC,IAA7C,EAAb;AACH,CAHqC,CAAnC;;AAKP,SAASC,uBAAT,CAAiCC,aAAjC,EAAgDC,eAAhD,EAAgE;EAC5D,OAAOA,eAAP;AACH;;AAED,OAAO,MAAMC,QAAQ,GAAG1B,WAAW,CAAC;EAChC2B,IAAI,EAAC,KAD2B;EAEhCC,YAAY,EAAE1B,cAFkB;EAIhC2B,QAAQ,EAAE;IACNC,OAAO,EAAE,CAACC,KAAD,EAAQC,MAAR,KAAmB7B,cAAc,CAAE4B,KAAF,EAASC,MAAM,CAACC,OAAhB,CADpC;IAENC,MAAM,EAAE,CAACH,KAAD,EAASC,MAAT,KAAoBvB,aAAa,CAAEsB,KAAF,EAASC,MAAM,CAACC,OAAhB,CAFnC;IAGNE,SAAS,EAAE,CAACJ,KAAD,EAAQC,MAAR,KAAmBb,gBAAgB,CAAEY,KAAF,EAASC,MAAM,CAACC,OAAhB;EAHxC,CAJsB;EAShCG,aAAa,EAAE;IACX,CAAChB,UAAU,CAACiB,SAAZ,GAAwB,CAACN,KAAD,EAAQC,MAAR,KAAmBT,uBAAuB,CAACQ,KAAD,EAAQC,MAAM,CAACC,OAAf;EADvD;AATiB,CAAD,CAA5B;AAeP,OAAO,MAAM;EAAEC,MAAF;EAAUC,SAAV;EAAqBL;AAArB,IAAgCJ,QAAQ,CAACY,OAA/C;AACP,eAAeZ,QAAQ,CAACa,OAAxB,C,CAEA;AACA;AAEA;AAEA;AAGA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAIA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA"},"metadata":{},"sourceType":"module"}