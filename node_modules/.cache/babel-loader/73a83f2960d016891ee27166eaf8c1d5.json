{"ast":null,"code":"import { createAsyncThunk, createSlice } from '@reduxjs/toolkit';\nimport global from '../Global/Global';\nconst initialProduto = {\n  status: 'notloaded',\n  produtos: [],\n  erro: null\n};\n\nfunction openBoxReducer(state, id) {\n  const filtro = state.produtos.filter(p => p.id == id);\n  return filtro;\n}\n\nfunction addBoxReducer(state, produto) {\n  let proxId = 1 + state.produtos.map(p => p.id).reduce((x, y) => Math.max(x, y));\n  return state.produtos.concat([{ ...produto,\n    id: proxId\n  }]);\n}\n\nfunction deleteBoxReducer(state, id) {\n  return state.produtos.filter(p => p.id !== id);\n}\n\nexport const fetchBanco = createAsyncThunk('Banco/fetchBanco', async () => {\n  return await (await fetch('http://localhost:3004/Banco')).json();\n});\n\nfunction fullfillProjetosReducer(projetosState, projetosFetched) {\n  projetosState.status = 'loaded';\n  projetosState.produtos = projetosFetched;\n}\n\nexport const boxSlice = createSlice({\n  name: 'box',\n  initialState: initialProduto,\n  reducers: {\n    openBox: (state, action) => openBoxReducer(state, action.payload),\n    addBox: (state, action) => addBoxReducer(state, action.payload),\n    deleteBox: (state, action) => deleteBoxReducer(state, action.payload)\n  },\n  extraReducers: {\n    [fetchBanco.fulfilled]: (state, action) => fullfillProjetosReducer(state, action.payload),\n    [fetchBanco.pending]: state => {\n      state.status = 'loading';\n    },\n    [fetchBanco.rejected]: (state, action) => {\n      state.status = 'failed';\n      state.erro = action.erro.message;\n    }\n  }\n});\nexport const {\n  addBox,\n  deleteBox,\n  openBox\n} = boxSlice.actions;\nexport default boxSlice.reducer;","map":{"version":3,"names":["createAsyncThunk","createSlice","global","initialProduto","status","produtos","erro","openBoxReducer","state","id","filtro","filter","p","addBoxReducer","produto","proxId","map","reduce","x","y","Math","max","concat","deleteBoxReducer","fetchBanco","fetch","json","fullfillProjetosReducer","projetosState","projetosFetched","boxSlice","name","initialState","reducers","openBox","action","payload","addBox","deleteBox","extraReducers","fulfilled","pending","rejected","message","actions","reducer"],"sources":["C:/Users/Victor/Desktop/Projeto/PSW/ti-2022-1-grupo_7/src/components/Redux/boxSlice.js"],"sourcesContent":["import { createAsyncThunk, createSlice } from '@reduxjs/toolkit'\nimport global from '../Global/Global'\n\nconst initialProduto = {\n    status:'notloaded',\n    produtos:[],\n    erro:null\n};\n\n\n\nfunction openBoxReducer(state, id){\n    const filtro = state.produtos.filter((p) => p.id == id)\n    return filtro;\n}\n\nfunction addBoxReducer(state, produto){\n    let proxId = 1 + state.produtos.map(p => p.id).reduce((x,y) => Math.max(x,y));\n    return state.produtos.concat([{...produto, id: proxId}]);\n}\n\nfunction deleteBoxReducer(state, id){\n\n    return state.produtos.filter((p) => p.id !== id);\n}\n\nexport const fetchBanco = createAsyncThunk('Banco/fetchBanco',\n    async () => {\n        return await (await fetch('http://localhost:3004/Banco')).json();\n    });\n\nfunction fullfillProjetosReducer(projetosState, projetosFetched){\n    projetosState.status='loaded';\n    projetosState.produtos = projetosFetched;\n}\n\nexport const boxSlice = createSlice({\n    name:'box',\n    initialState: initialProduto,\n       \n    reducers: {\n        openBox: (state, action) => openBoxReducer (state, action.payload),\n        addBox: (state , action) => addBoxReducer (state, action.payload),\n        deleteBox: (state, action) => deleteBoxReducer (state, action.payload)\n    },\n    extraReducers: {\n        [fetchBanco.fulfilled]: (state, action) => fullfillProjetosReducer(state, action.payload),\n        [fetchBanco.pending]: (state) => {state.status='loading'},\n        [fetchBanco.rejected]: (state, action) => {state.status='failed';state.erro=action.erro.message}\n      \n    }\n\n})\n\nexport const { addBox, deleteBox, openBox} = boxSlice.actions\nexport default boxSlice.reducer\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}